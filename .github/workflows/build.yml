name: "Build"

on:
  pull_request:
    branches:
      - dev
      - test
      - master
  workflow_dispatch:

jobs:  
  build:      
    name: Build & Release 
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
        #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

        #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v4.7.0
        with:
          distribution: 'oracle'
          java-version: '17'
          cache: 'gradle'

        #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.4'
          channel: 'stable'
          cache: true

        #4 Cache Pub Dependencies
      - name: Cache Pub Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PUB_CACHE }}
            .dart_tool/
            build/
            ~/.pub-cache/
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

        #5 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

        #6 Setup Keystore
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties
        
       #7 Building APK
      - name: Build APK
        run: flutter build apk --release

        #8 Building App Bundle (aab)
      - name: Build appBundle
        run: flutter build appbundle

        #9 Build IPA ( IOS Build )
      - name: Build IPA
        run: flutter build ipa --no-codesign

      - name: Compress Archives and IPAs
        run: |
          cd build
          tar -czf ios_build.tar.gz ios
          
      #10 Upload Artifacts as separate files
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: APK-Release
          path: build/app/outputs/flutter-apk/app-release.apk
          
      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: AAB-Release
          path: build/app/outputs/bundle/release/app-release.aab
          
      - name: Upload iOS Build
        uses: actions/upload-artifact@v4
        with:
          name: iOS-Build
          path: build/ios_build.tar.gz
          
        #11 Extract Version
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV
          
        #12 Check if Tag Exists
      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
          
        #13 Modify Tag if it Exists
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV
        
        #14 Create Release
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab,build/ios_build.tar.gz"
          tag: v${{ env.VERSION }}
